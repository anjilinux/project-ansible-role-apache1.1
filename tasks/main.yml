---
- name: Include facts
  include: facts.yml

- name: (Ubuntu) Update APT cache
  apt:
    force_apt_get: true
    cache_valid_time: "3600"
    state: present
    update_cache: true
  when: ansible_distribution == "Ubuntu"

- name: Install Apache packages
  package:
    name: "{{ apache_packages }}"
    state: present

- name: Delete Apache "hello world" configuration
  file:
    path:
    state: absent
  notify:
    - restart apache
  with_items:
    - "{{ apache_config_site_path }}/autoindex.conf"
    - "{{ apache_config_site_path }}/welcome.conf"

- name: Ensure Apache group exists
  group:
    name: "{{ apache_user }}"
    state: present

- name: Ensure Apache user exists
  user:
    name: "{{ apache_user }}"
    state: present
    group: "{{ apache_group }}"

- name: Assign Apache to specified user in config
  lineinfile:
    path: "{{ apache_config }}"
    regexp: "^User "
    line: "User {{ apache_user }}"

- name: Assign Apache to specified group in config
  lineinfile:
    path: "{{ apache_config }}"
    regexp: "^Group "
    line: "Group {{ apache_group }}"

- name: (RedHat) Bind Apache to specified HTTP port
  lineinfile:
    path: "{{ apache_config }}"
    regexp: "^Listen 80$"
    line: "Listen {{ apache_port_http }}"
  when: ansible_os_family == "RedHat"

- name: (RedHat) Bind Apache to specified HTTPS port
  lineinfile:
    path: "{{ apache_config_ports }}"
    regexp: "^Listen 443 https$"
    line: "Listen {{ apache_port_https }} https"
  when: ansible_os_family == "RedHat"

- name: (Debian) Bind Apache to specified HTTP port
  lineinfile:
    path: "{{ apache_config_ports }}"
    regexp: "^Listen 80$"
    line: "Listen {{ apache_port_http }}"
  when: ansible_os_family == "Debian"

- name: (Debian) Bind Apache to specified HTTPS port
  replace:
    path: "{{ apache_config_ports }}"
    regexp: "^\tListen 443$"
    replace: "\tListen {{ apache_port_https }}"
  when: ansible_os_family == "Debian"

- name: (Debian) Remove default virtualhost
  file:
    path: "{{ apache_config_site_path }}/000-default.conf"
    state: absent
  when: ansible_os_family == "Debian"

- name: (Debian) Enable Apache modules
  apache2_module:
    name: "{{ item }}"
    state: present
    ignore_configcheck: true
  failed_when:
    - apache_modules.rc is defined
    - apache_modules.rc > 0
  notify: restart apache
  register: apache_modules
  when: ansible_os_family == "Debian"
  with_items:
    - proxy_fcgi
    - rewrite
    - ssl

- name: Configure httpd mpm module
  template:
    src: etc/httpd/modules.d/00-mpm.conf.j2
    dest: "{{ apache_modules_config_path }}/00-mpm.conf"
    owner: root
    group: root
    mode: 0644
  notify:
    - restart apache

- name: Include systemd restart configuration
  include: systemd.yml
  when: ansible_service_mgr == "systemd"

- name: Start and enable Apache service
  service:
    name: "{{ apache_daemon }}"
    state: started
    enabled: true
